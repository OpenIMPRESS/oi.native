project(oi.proto VERSION 0.1 LANGUAGES CXX)
FIND_PACKAGE(Protobuf REQUIRED)

set(CMAKE_CXX_STANDARD 11)

set(PROTOBUF_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/generated")
#set(PROTOBUF_INPUT_DIRECTORY "${OI_SHARED_DIR}/oi.proto.definitions/proto")
#MESSAGE(STATUS "PROTO PATH: ${PROTOBUF_INPUT_DIRECTORY}")
#FILE(GLOB PROTOBUF_DEFINITION_FILES "${PROTOBUF_INPUT_DIRECTORY}/*.proto")
#MESSAGE(STATUS "PROTO FILES: ${PROTOBUF_DEFINITION_FILES}")
#MESSAGE(STATUS "PROTO OUTPUT: ${PROTOBUF_OUTPUT_DIRECTORY}")
#foreach(file ${PROTOBUF_DEFINITION_FILES})
#    MESSAGE(STATUS "FILE: ${file}")
#    set(PROTOBUF_CMD "protoc")
#    set(PROTOBUF_ARG "--proto_path=\"${PROTOBUF_INPUT_DIRECTORY}\" --cpp_out=\"${PROTOBUF_OUTPUT_DIRECTORY}\" \"${file}\"")
#    execute_process(COMMAND ${PROTOBUF_CMD} ${PROTOBUF_OUTPUT_DIRECTORY}
#        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
#            RESULT_VARIABLE PROTOBUF_RESULT
#            OUTPUT_VARIABLE PROTOBUF_OUTPUT_VARIABLE)
#    MESSAGE(STATUS "     CMD: ${PROTOBUF_CMD} ${PROTOBUF_ARG}")
#    MESSAGE(STATUS "  RESULT: ${PROTOBUF_RESULT}")
#    MESSAGE(STATUS "  OUTPUT: ${PROTOBUF_OUTPUT_VARIABLE}")
#endforeach()

FILE(GLOB OI_PROTO_SRC "${PROTOBUF_OUTPUT_DIRECTORY}/*.pb.cc")
MESSAGE(STATUS "OI_PROTO_SRC: ${OI_PROTO_SRC}")
FILE(GLOB OI_PROTO_HEADER "${PROTOBUF_OUTPUT_DIRECTORY}/*.hpp")
MESSAGE(STATUS "OI_PROTO_HEADER: ${OI_PROTO_HEADER}")

include_directories(${Protobuf_INCLUDE_DIRS})
#protobuf_generate_cpp(OI_PROTO_SRC OI_PROTO_HEADER ${PROTOBUF_DEFINITION_FILES})

add_library(${PROJECT_NAME} SHARED ${OI_PROTO_HEADER} ${OI_PROTO_SRC})
target_link_libraries(${PROJECT_NAME} ${PROTOBUF_LIBRARIES})

source_group("Header Files" FILES ${OI_PROTO_HEADER})

MESSAGE(STATUS "PROJECT_SOURCE_DIR:  ${PROJECT_SOURCE_DIR}")

set_target_properties(${PROJECT_NAME}
                      PROPERTIES POSITION_INDEPENDENT_CODE ON)

set(${PROJECT_NAME}_INCLUDE_DIRS
    ${PROTOBUF_OUTPUT_DIRECTORY}
    CACHE INTERNAL "${PROJECT_NAME}: Include Directories" FORCE)

target_include_directories(${PROJECT_NAME} PUBLIC
    $<BUILD_INTERFACE:${PROTOBUF_OUTPUT_DIRECTORY}>
    $<INSTALL_INTERFACE:generated>)

install(TARGETS ${PROJECT_NAME} EXPORT OIProtoConfig
    ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})  # This is for Windows
install(DIRECTORY generated/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

install(EXPORT OIProtoConfig DESTINATION share/OIProto/cmake)

# This makes the project importable from the build directory
export(TARGETS ${PROJECT_NAME} FILE OIProtoConfig.cmake)
